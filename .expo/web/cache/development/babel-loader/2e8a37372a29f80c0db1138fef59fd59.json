{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/eigil/Google Drev/HA IT/5. semester/Innovation/\\xD8velser/ovelse2/components/StateEventHandlerComponent.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Blink = function Blink(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShowingText = _useState2[0],\n      setIsShowingText = _useState2[1];\n\n  useEffect(function () {\n    var toggle = setInterval(function () {\n      setIsShowingText(!isShowingText);\n    }, 1000);\n    return function () {\n      return clearInterval(toggle);\n    };\n  });\n\n  if (!isShowingText) {\n    return null;\n  }\n\n  return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, props.text);\n};\n\nvar BlinkApp = function BlinkApp() {\n  return React.createElement(View, {\n    style: {\n      marginTop: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Blink, {\n    text: \"I love to blink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), React.createElement(Blink, {\n    text: \"Yes blinking is so great\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), React.createElement(Blink, {\n    text: \"Why did they ever take this out of HTML\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(Blink, {\n    text: \"Look at me look at me look at me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default BlinkApp;","map":{"version":3,"sources":["/Users/eigil/Google Drev/HA IT/5. semester/Innovation/Ã˜velser/ovelse2/components/StateEventHandlerComponent.js"],"names":["React","useState","useEffect","Blink","props","isShowingText","setIsShowingText","toggle","setInterval","clearInterval","text","BlinkApp","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,kBACqBH,QAAQ,CAAC,IAAD,CAD7B;AAAA;AAAA,MACdI,aADc;AAAA,MACCC,gBADD;;AAGrBJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMK,MAAM,GAAGC,WAAW,CAAC,YAAM;AAC7BF,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACH,KAFyB,EAEvB,IAFuB,CAA1B;AAIA,WAAO;AAAA,aAAMI,aAAa,CAACF,MAAD,CAAnB;AAAA,KAAP;AACH,GANQ,CAAT;;AAQA,MAAI,CAACF,aAAL,EAAoB;AAChB,WAAO,IAAP;AACH;;AAED,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,KAAK,CAACM,IAAb,CAAP;AACH,CAhBD;;AAkBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,0BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,yCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,kCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CATD;;AAWA,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View } from 'react-native';\n\nconst Blink = (props) => {\n    const [isShowingText, setIsShowingText] = useState(true);\n\n    useEffect(() => {\n        const toggle = setInterval(() => {\n            setIsShowingText(!isShowingText);\n        }, 1000);\n\n        return () => clearInterval(toggle);\n    })\n\n    if (!isShowingText) {\n        return null;\n    }\n\n    return <Text>{props.text}</Text>;\n}\n\nconst BlinkApp = () => {\n    return (\n        <View style={{marginTop: 50}}>\n            <Blink text='I love to blink' />\n            <Blink text='Yes blinking is so great' />\n            <Blink text='Why did they ever take this out of HTML' />\n            <Blink text='Look at me look at me look at me' />\n        </View>\n    );\n}\n\nexport default BlinkApp;\n"]},"metadata":{},"sourceType":"module"}